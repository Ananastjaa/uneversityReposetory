#include <iostream>
#include <string>

// MD KLASE PIEMERS 5  (otraa prezentaacija)       TIMER

const int Size = 100;

using namespace std;

class Box {
private:
	int a, b;
	int width;
	string name;

public:
	friend int getWigthFriend(Box& x);
	friend bool isFactor(Box& box);
	void setWidth(int width);
	int getWidth();
	Box(int x, int y);

	Box(string name)
	{
		cout << "\nConstructor executed\n";
		width = 0;
		a = 0;
		b = 0;
		this->name = name;
	}

	~Box() {
		cout << "\n\nDestructor executed\n";
	}
};

Box::Box(int x, int y) { cout << "\nConstructor executed\n"; a = x; b = y; width = 0; }

bool isFactor(Box& box){ return box.a % box.b == 0; }

void Box::setWidth(int width){this->width = width;}

int Box::getWidth(){return this->width; }

int getWigthFriend(Box& x) {return x.width;}

int main() {
	Box box1 = Box(6, 2);
	box1.setWidth(3);
	cout << endl << "friend func width: " << getWigthFriend(box1);
	cout << endl << "class func width: " << box1.getWidth();
	cout << endl << "isFactor funck result: " << isFactor(box1);

	return 0;
}
