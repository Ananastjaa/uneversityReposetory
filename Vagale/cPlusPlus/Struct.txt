#include <iostream>
#include <cstdlib>
#include <string>
#include <fstream>

using namespace std;

struct cat
{
	int birthYear;
	double height;
	string name;
	string breed;
};

void setCatFromConsole(cat& c)
{
	cout << endl << "dimsanas gads: ";
	cin >> c.birthYear;

	cout << endl << "krasa: ";
	cin >> c.breed;

	cout << endl << "vards: ";
	cin >> c.name;

	cout << endl << "svars: ";
	cin >> c.height;
}

void setCat(cat& c, int i)
{
	c.birthYear = 2024;
	c.breed = "melns";
	c.name = "Tom" + to_string(i);
	c.height = 5 + i*0.25;
}

void printCat(cat& c)
{
	cout << endl << endl << "Kakis " << c.name
		<< endl << "dimsanas gads: " << c.birthYear
		<< endl << "krasa: " << c.breed
		<< endl << "svars: " << c.height;
}

void writeToFiles(cat& c)
{
	ofstream fileWriterTXT, fileWriterBIN;
	string line;

	fileWriterTXT.open("kakiTXT.txt", ios :: app);
	fileWriterBIN.open("kakiBIN.bin", ios :: binary | ios :: app);

	if (!fileWriterBIN) { cerr << endl << "Nevareeja atveert failu!"; }
	else fileWriterBIN.write((char*)&c, sizeof(cat));
	
	if (!fileWriterTXT) { cerr << endl << "Nevareeja atveert failu!"; }
	else
	{
		line = c.name + " " + c.breed + " " + to_string(c.height).substr(0, to_string(c.height).find('.')  + 3) + " " + to_string(c.birthYear);
		fileWriterTXT << line << "\n";
	}

	fileWriterBIN.close();
	fileWriterTXT.close();
}

void readFromFiles()
{
	ifstream fileReaderTXT, fileReaderBIN;
	int n = 0;
	string line;
	cat c;

	fileReaderTXT.open("kakiTXT.txt");
	fileReaderBIN.open("kakiBIN.bin", ios::binary);

	if (!fileReaderBIN) { cerr << endl << "Nevareeja atveert failu!"; }
	else
	{
		fileReaderBIN.seekg(0, ios::end);
		n = fileReaderBIN.tellg() / sizeof(cat);
		cout << endl << "BIN failaa ir " << n << " kaki";
		fileReaderBIN.seekg(0, ios::beg);
		cout << endl << "BIN faila kontents:";
		for (int i = 0; i < n; i++)
		{
			fileReaderBIN.read((char*)&c, sizeof(cat));
			printCat(c);
		}
	}

	if (!fileReaderTXT) { cerr << endl << "Nevareeja atveert failu!"; }
	else
	{
		cout <<endl << "---------------------------------------------------";
		cout << endl << endl << "TXT faila kontents:" << endl;
		while(!fileReaderTXT.eof())
		{
			getline(fileReaderTXT, line);
			cout << line << endl;
		}
	}

	fileReaderBIN.close();
	fileReaderTXT.close();
}

void clearFiles()
{
	ofstream fileWriterTXT, fileWriterBIN;
	string line;

	fileWriterTXT.open("kakiTXT.txt");
	fileWriterBIN.open("kakiBIN.bin", ios :: binary);

	fileWriterBIN.clear();
	fileWriterTXT.clear();

	fileWriterBIN.close();
	fileWriterTXT.close();
}

int getCatCount()
{
	int recordCount = 0;
	string line;

	ifstream fileReaderTXT;

	fileReaderTXT.open("kakiTXT.txt");

	if (!fileReaderTXT) { cerr << endl << "Nevareeja atveert failu!"; }
	else
	{
		while (!fileReaderTXT.eof())
		{
			getline(fileReaderTXT, line);
			if(line != "") recordCount++;
		}
	}

	fileReaderTXT.close();
	return recordCount;
}


int main(int argc, char** argv) {
	cat catArr[100];
	int n;

	cout << "kaku skaits: ";
	cin >> n;

	for (int i = 0; i < n; i++)
	{
		cat newCat;
		setCat3(newCat, i + 1);
		catArr[i] = newCat;
	}

	clearFiles();
	for (int i = 0; i < n; i++)
	{
		writeToFiles(catArr[i]);
	}
	cout << "Faili ir aizpildiiti!" << endl;
	cout << "---------------------------------------------------" << endl;

	readFromFiles();
}




//----NAMESPACES--------------------------------------
// #include <iostream>
//#include <cstdlib>
//#include <string>
// 
//using namespace std;
//
//namespace today
//{
//	int x = 25;
//}
//
//namespace tomorrow
//{
//	int x = 30;
//}
//
//int main(int argc, char** argv) {
//	int x = 1;
//
//	cout << "main x: " << x << endl;
//	cout << "today x: " << today::x << endl;
//	cout << "tomorrow x: " << tomorrow::x << endl;
//	cout << "again main x: " << x << endl;
//}
